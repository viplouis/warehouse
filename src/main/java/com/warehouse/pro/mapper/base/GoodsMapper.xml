<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.warehouse.pro.mapper.base.GoodsMapper" >
  <resultMap id="BaseResultMap" type="com.warehouse.pro.po.base.Goods" >
    <id column="goodsid" property="goodsid" jdbcType="INTEGER" />
    <result column="goodsname" property="goodsname" jdbcType="VARCHAR" />
    <result column="model" property="model" jdbcType="VARCHAR" />
    <result column="goodstype" property="goodstype" jdbcType="INTEGER" />
    <result column="sortnum" property="sortnum" jdbcType="INTEGER" />
    <result column="isdelete" property="isdelete" jdbcType="INTEGER" />
    <result column="price" property="price" jdbcType="REAL" />
    <result column="supplier" property="supplier" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    goodsid, goodsname, model, goodstype, sortnum, isdelete, price, supplier
  </sql>
  <select id="selectByPage" resultMap="BaseResultMap" parameterType="map">
    select
    	<include refid="Base_Column_List" />
    from goods
	    where isdelete &lt;&gt;1
	    <if test="key!=null">
	    	and goodsname like '%${key}%'
	    </if>   
      order by goodsid
    limit #{startPos},#{pageSize}
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.warehouse.pro.po.base.GoodsExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from goods
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from goods
    where goodsid = #{goodsid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from goods
    where goodsid = #{goodsid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.warehouse.pro.po.base.GoodsExample" >
    delete from goods
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.warehouse.pro.po.base.Goods" >
    insert into goods (goodsid, goodsname, model, 
      goodstype, sortnum, isdelete, 
      price, supplier)
    values (#{goodsid,jdbcType=INTEGER}, #{goodsname,jdbcType=VARCHAR}, #{model,jdbcType=VARCHAR}, 
      #{goodstype,jdbcType=INTEGER}, #{sortnum,jdbcType=INTEGER}, #{isdelete,jdbcType=INTEGER}, 
      #{price,jdbcType=REAL}, #{supplier,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.warehouse.pro.po.base.Goods" >
    insert into goods
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="goodsid != null" >
        goodsid,
      </if>
      <if test="goodsname != null" >
        goodsname,
      </if>
      <if test="model != null" >
        model,
      </if>
      <if test="goodstype != null" >
        goodstype,
      </if>
      <if test="sortnum != null" >
        sortnum,
      </if>
      <if test="isdelete != null" >
        isdelete,
      </if>
      <if test="price != null" >
        price,
      </if>
      <if test="supplier != null" >
        supplier,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="goodsid != null" >
        #{goodsid,jdbcType=INTEGER},
      </if>
      <if test="goodsname != null" >
        #{goodsname,jdbcType=VARCHAR},
      </if>
      <if test="model != null" >
        #{model,jdbcType=VARCHAR},
      </if>
      <if test="goodstype != null" >
        #{goodstype,jdbcType=INTEGER},
      </if>
      <if test="sortnum != null" >
        #{sortnum,jdbcType=INTEGER},
      </if>
      <if test="isdelete != null" >
        #{isdelete,jdbcType=INTEGER},
      </if>
      <if test="price != null" >
        #{price,jdbcType=REAL},
      </if>
      <if test="supplier != null" >
        #{supplier,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.warehouse.pro.po.base.GoodsExample" resultType="java.lang.Integer" >
    select count(*) from goods
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update goods
    <set >
      <if test="record.goodsid != null" >
        goodsid = #{record.goodsid,jdbcType=INTEGER},
      </if>
      <if test="record.goodsname != null" >
        goodsname = #{record.goodsname,jdbcType=VARCHAR},
      </if>
      <if test="record.model != null" >
        model = #{record.model,jdbcType=VARCHAR},
      </if>
      <if test="record.goodstype != null" >
        goodstype = #{record.goodstype,jdbcType=INTEGER},
      </if>
      <if test="record.sortnum != null" >
        sortnum = #{record.sortnum,jdbcType=INTEGER},
      </if>
      <if test="record.isdelete != null" >
        isdelete = #{record.isdelete,jdbcType=INTEGER},
      </if>
      <if test="record.price != null" >
        price = #{record.price,jdbcType=REAL},
      </if>
      <if test="record.supplier != null" >
        supplier = #{record.supplier,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update goods
    set goodsid = #{record.goodsid,jdbcType=INTEGER},
      goodsname = #{record.goodsname,jdbcType=VARCHAR},
      model = #{record.model,jdbcType=VARCHAR},
      goodstype = #{record.goodstype,jdbcType=INTEGER},
      sortnum = #{record.sortnum,jdbcType=INTEGER},
      isdelete = #{record.isdelete,jdbcType=INTEGER},
      price = #{record.price,jdbcType=REAL},
      supplier = #{record.supplier,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.warehouse.pro.po.base.Goods" >
    update goods
    <set >
      <if test="goodsname != null" >
        goodsname = #{goodsname,jdbcType=VARCHAR},
      </if>
      <if test="model != null" >
        model = #{model,jdbcType=VARCHAR},
      </if>
      <if test="goodstype != null" >
        goodstype = #{goodstype,jdbcType=INTEGER},
      </if>
      <if test="sortnum != null" >
        sortnum = #{sortnum,jdbcType=INTEGER},
      </if>
      <if test="isdelete != null" >
        isdelete = #{isdelete,jdbcType=INTEGER},
      </if>
      <if test="price != null" >
        price = #{price,jdbcType=REAL},
      </if>
      <if test="supplier != null" >
        supplier = #{supplier,jdbcType=VARCHAR},
      </if>
    </set>
    where goodsid = #{goodsid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.warehouse.pro.po.base.Goods" >
    update goods
    set goodsname = #{goodsname,jdbcType=VARCHAR},
      model = #{model,jdbcType=VARCHAR},
      goodstype = #{goodstype,jdbcType=INTEGER},
      sortnum = #{sortnum,jdbcType=INTEGER},
      isdelete = #{isdelete,jdbcType=INTEGER},
      price = #{price,jdbcType=REAL},
      supplier = #{supplier,jdbcType=VARCHAR}
    where goodsid = #{goodsid,jdbcType=INTEGER}
  </update>
</mapper>